apiVersion: apps/v1
kind: Deployment
metadata:
  name: public-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: public-service
  template:
    metadata:
      labels:
        app: public-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: public-service
        image: xvnpw/public-service:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: public-service
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 5000
  selector:
    app: public-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: protected-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: protected-service
  template:
    metadata:
      labels:
        app: protected-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: protected-service
        image: xvnpw/protected-service:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: protected-service
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 5000
  selector:
    app: protected-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: auth-service
        image: xvnpw/auth-service:0.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 5000
  selector:
    app: auth-service
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/auth-url: http://auth-service.default.svc.cluster.local:8080/verify
spec:
  rules:
    - host: app.test
      http:
        paths:
          - path: /public-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: public-service
                port:
                  number: 8080
          - path: /protected-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: protected-service
                port:
                  number: 8080
